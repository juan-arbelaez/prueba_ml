name: CI-CD-CT Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Instalar dependencias mínimas para CI
        run: |
          pip install flake8 pytest

      - name: Verificar formato con flake8
        run: flake8 --ignore=E501 .

      - name: Ejecutar pruebas unitarias con pytest
        run: pytest tests/

  cd:
    name: Continuous Deployment
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Instalar dependencias
        run: pip install -r requirements.txt

      - name: Crear directorios si no existen
        run: mkdir -p data/processed data/models

      - name: Ejecutar Preprocesamiento
        run: python src/preprocessing.py

      - name: Ejecutar Entrenamiento
        run: python src/training.py

      - name: Guardar modelos y transformadores
        uses: actions/upload-artifact@v3
        with:
          name: trained-model
          path: |
            data/models/model.pkl
            data/processed/vectorizer.pkl
            data/processed/encoder.pkl

      - name: Guardar datos preprocesados
        uses: actions/upload-artifact@v3
        with:
          name: processed-data
          path: data/processed/X.npz

      - name: Guardar métricas de entrenamiento
        uses: actions/upload-artifact@v3
        with:
          name: training-results
          path: data/models/training_results.json

  ct:
    name: Continuous Testing
    runs-on: ubuntu-latest
    needs: cd

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Instalar dependencias
        run: pip install -r requirements.txt

      - name: Descargar modelo entrenado
        uses: actions/download-artifact@v3
        with:
          name: trained-model
          path: data/models

      - name: Descargar datos preprocesados
        uses: actions/download-artifact@v3
        with:
          name: processed-data
          path: data/processed

      - name: Verificar archivos necesarios antes de inferencia
        run: |
          if [ ! -f "data/models/model.pkl" ]; then echo "Error: Modelo no encontrado"; exit 1; fi
          if [ ! -f "data/processed/vectorizer.pkl" ]; then echo "Error: Vectorizador no encontrado"; exit 1; fi

      - name: Ejecutar Inferencia
        run: python src/inference.py
